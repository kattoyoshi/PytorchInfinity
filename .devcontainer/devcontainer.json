{
    "name": "DevContainer for MMIntegrated",
    # Make sure to build docker container in advance
    "image": "mmintegrated:latest",
    "customizations": {
        "vscode": {
            "extensions": [
                "eamodio.gitlens",
                "njpwerner.autodocstring",
                "aaron-bond.better-comments",
                "streetsidesoftware.code-spell-checker",
                "mhutchie.git-graph",
                "donjayamanne.githistory",
                "oderwat.indent-rainbow",
                "bierner.markdown-preview-github-styles",
                "PKief.material-icon-theme",
                "christian-kohler.path-intellisense",
                "ms-python.vscode-pylance",
                "ms-python.python",
                "KevinRose.vsc-python-indent",
                "davidhouchin.whitespace-plus",
                "ms-python.flake8",
                "ms-python.isort",
                "ms-python.black-formatter",
                "bierner.markdown-mermaid"
            ],
            "settings": {
                "editor.renderWhitespace": "all",
                "editor.renderControlCharacters": true,
                "editor.minimap.enabled": false,
                "editor.rulers": [
                    120
                ],
                "editor.defaultFormatter": "ms-python.black-formatter",
                "editor.formatOnPaste": true,
                "editor.formatOnSave": true,
                "editor.formatOnType": true,
                "files.autoGuessEncoding": true,
                "diffEditor.ignoreTrimWhitespace": false,
                "diffEditor.codeLens": true,
                "workbenchi.colorTheme": "Github Dark",
                "python.languageServer": "Pylance",
                "flake8.args": [
                    "--max-line-length=120",
                    "--extend-ignore=E203"
                ],
                "black-formatter.args": [
                    "--line-length=120"
                ],
                "isort.args": [
                    "--profile=black"
                ]
            }
        }
    },
    "workspaceFolder": "/home/${localEnv:LOGNAME}/workspace",
    "workspaceMount": "source=${localWorkspaceFolder},target=${containerWorkspaceFolder},type=bind",
    "postCreateCommand": "bash ./.devcontainer/postCreate.sh",
    "runArgs": [
        "--rm",
        "-it",
        "--gpus",
        "all",
        "--net=host",
        "--ulimit",
        "memlock=-1",
        "--ulimit",
        "stack=67108864",
        "--name",
        "pythorch-infinity-dev"
    ],
    "forwardPorts": [
        8888
    ],
    "mounts": [
        // Add mount configuration here
        // example: "source=xxx,target=${containerWorkspaceFolder}/xxx,type=bind"
    ]
}
